const mysql = require('mysql2/promise');
require('dotenv').config();

/**
 * Migration script ƒë·ªÉ th√™m b·∫£ng investment_knowledge
 */

const migrateInvestmentKnowledge = async () => {
  let connection;
  
  try {
    console.log('üîÑ Starting investment knowledge migration...');
    
    // K·∫øt n·ªëi database
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'yt_capital_db',
      port: process.env.DB_PORT || 3306
    });

    console.log('‚úÖ Connected to database');

    // Ki·ªÉm tra xem b·∫£ng ƒë√£ t·ªìn t·∫°i ch∆∞a
    const [tables] = await connection.execute(`
      SELECT TABLE_NAME 
      FROM information_schema.TABLES 
      WHERE TABLE_SCHEMA = ? AND TABLE_NAME = 'investment_knowledge'
    `, [process.env.DB_NAME || 'yt_capital_db']);

    if (tables.length > 0) {
      console.log('‚ö†Ô∏è  Table investment_knowledge already exists');
      return;
    }

    // T·∫°o b·∫£ng investment_knowledge
    const createTableSQL = `
      CREATE TABLE investment_knowledge (
        id INT PRIMARY KEY AUTO_INCREMENT,
        title VARCHAR(500) NOT NULL,
        image_url VARCHAR(500),
        content LONGTEXT NOT NULL,
        meaning TEXT,
        author_id INT NOT NULL,
        status ENUM('draft', 'published', 'archived') DEFAULT 'draft',
        view_count INT DEFAULT 0,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
        INDEX idx_status (status),
        INDEX idx_author (author_id),
        INDEX idx_created_at (created_at)
      )
    `;

    await connection.execute(createTableSQL);
    console.log('‚úÖ Table investment_knowledge created successfully');

    // Th√™m d·ªØ li·ªáu m·∫´u
    const insertSampleDataSQL = `
      INSERT INTO investment_knowledge (title, image_url, content, meaning, author_id, status) VALUES
      (
        'Chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞ d√†i h·∫°n',
        '/images/investment1.jpg',
        '<h3>Gi·ªõi thi·ªáu v·ªÅ ƒë·∫ßu t∆∞ d√†i h·∫°n</h3><p>ƒê·∫ßu t∆∞ d√†i h·∫°n l√† m·ªôt chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞ t·∫≠p trung v√†o vi·ªác n·∫Øm gi·ªØ c√°c t√†i s·∫£n trong m·ªôt kho·∫£ng th·ªùi gian d√†i, th∆∞·ªùng t·ª´ 5 nƒÉm tr·ªü l√™n. Chi·∫øn l∆∞·ª£c n√†y d·ª±a tr√™n ni·ªÅm tin r·∫±ng th·ªã tr∆∞·ªùng t√†i ch√≠nh s·∫Ω tƒÉng tr∆∞·ªüng theo th·ªùi gian, b·∫•t ch·∫•p nh·ªØng bi·∫øn ƒë·ªông ng·∫Øn h·∫°n.</p><h4>L·ª£i √≠ch c·ªßa ƒë·∫ßu t∆∞ d√†i h·∫°n:</h4><ul><li>Gi·∫£m thi·ªÉu t√°c ƒë·ªông c·ªßa bi·∫øn ƒë·ªông th·ªã tr∆∞·ªùng ng·∫Øn h·∫°n</li><li>T·∫≠n d·ª•ng l√£i k√©p (compound interest)</li><li>Gi·∫£m chi ph√≠ giao d·ªãch</li><li>Gi·∫£m stress v√† th·ªùi gian theo d√µi th·ªã tr∆∞·ªùng</li></ul>',
        'ƒê·∫ßu t∆∞ d√†i h·∫°n gi√∫p nh√† ƒë·∫ßu t∆∞ x√¢y d·ª±ng t√†i s·∫£n m·ªôt c√°ch b·ªÅn v·ªØng v√† ·ªïn ƒë·ªãnh, ph√π h·ª£p v·ªõi m·ª•c ti√™u t√†i ch√≠nh d√†i h·∫°n nh∆∞ ngh·ªâ h∆∞u, gi√°o d·ª•c con c√°i, ho·∫∑c mua nh√†.',
        1,
        'published'
      ),
      (
        'Qu·∫£n l√Ω r·ªßi ro trong ƒë·∫ßu t∆∞',
        '/images/investment2.jpg',
        '<h3>Hi·ªÉu v·ªÅ r·ªßi ro trong ƒë·∫ßu t∆∞</h3><p>R·ªßi ro l√† m·ªôt ph·∫ßn kh√¥ng th·ªÉ tr√°nh kh·ªèi trong ƒë·∫ßu t∆∞. Vi·ªác hi·ªÉu v√† qu·∫£n l√Ω r·ªßi ro hi·ªáu qu·∫£ l√† ch√¨a kh√≥a ƒë·ªÉ th√†nh c√¥ng trong ƒë·∫ßu t∆∞ d√†i h·∫°n.</p><h4>C√°c lo·∫°i r·ªßi ro ch√≠nh:</h4><ul><li><strong>R·ªßi ro th·ªã tr∆∞·ªùng:</strong> Bi·∫øn ƒë·ªông gi√° do c√°c y·∫øu t·ªë kinh t·∫ø vƒ© m√¥</li><li><strong>R·ªßi ro thanh kho·∫£n:</strong> Kh√≥ khƒÉn trong vi·ªác b√°n t√†i s·∫£n</li><li><strong>R·ªßi ro t√≠n d·ª•ng:</strong> Kh·∫£ nƒÉng m·∫•t v·ªën do ƒë·ªëi t√°c kh√¥ng th·ª±c hi·ªán nghƒ©a v·ª•</li><li><strong>R·ªßi ro l·∫°m ph√°t:</strong> S·ª©c mua gi·∫£m theo th·ªùi gian</li></ul><h4>Chi·∫øn l∆∞·ª£c qu·∫£n l√Ω r·ªßi ro:</h4><ul><li>ƒêa d·∫°ng h√≥a danh m·ª•c ƒë·∫ßu t∆∞</li><li>ƒê·∫ßu t∆∞ ƒë·ªãnh k·ª≥ (DCA)</li><li>ƒê·∫∑t m·ª•c ti√™u r√µ r√†ng v√† ki√™n tr√¨</li><li>Th∆∞·ªùng xuy√™n ƒë√°nh gi√° v√† ƒëi·ªÅu ch·ªânh danh m·ª•c</li></ul>',
        'Qu·∫£n l√Ω r·ªßi ro hi·ªáu qu·∫£ gi√∫p nh√† ƒë·∫ßu t∆∞ b·∫£o v·ªá v·ªën v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u t√†i ch√≠nh m·ªôt c√°ch an to√†n, ƒë·ªìng th·ªùi t·ªëi ƒëa h√≥a l·ª£i nhu·∫≠n trong d√†i h·∫°n.',
        1,
        'published'
      )
    `;

    await connection.execute(insertSampleDataSQL);
    console.log('‚úÖ Sample data inserted successfully');

    console.log('üéâ Investment knowledge migration completed successfully!');

  } catch (error) {
    console.error('‚ùå Migration failed:', error);
    throw error;
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Database connection closed');
    }
  }
};

// Ch·∫°y migration n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  migrateInvestmentKnowledge()
    .then(() => {
      console.log('‚úÖ Migration completed');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Migration failed:', error);
      process.exit(1);
    });
}

module.exports = migrateInvestmentKnowledge;



const { executeQuery } = require('../src/config/database');

async function addSampleCategories() {
  try {
    console.log('ƒêang th√™m categories m·∫´u...');
    
    // Th√™m categories cho ng√†nh
    const nganhCategories = [
      { name: 'Ng√¢n h√†ng', description: 'Ph√¢n t√≠ch ng√†nh ng√¢n h√†ng', color: '#3b82f6' },
      { name: 'B·∫•t ƒë·ªông s·∫£n', description: 'Ph√¢n t√≠ch ng√†nh b·∫•t ƒë·ªông s·∫£n', color: '#10b981' },
      { name: 'C√¥ng ngh·ªá', description: 'Ph√¢n t√≠ch ng√†nh c√¥ng ngh·ªá', color: '#f59e0b' },
      { name: 'NƒÉng l∆∞·ª£ng', description: 'Ph√¢n t√≠ch ng√†nh nƒÉng l∆∞·ª£ng', color: '#ef4444' }
    ];
    
    for (const category of nganhCategories) {
      try {
        await executeQuery(`
          INSERT INTO post_categories (name, description, color, category_type) 
          VALUES (?, ?, ?, 'nganh')
        `, [category.name, category.description, category.color]);
        console.log(`‚úÖ Th√™m danh m·ª•c ng√†nh: ${category.name}`);
      } catch (err) {
        if (err.code === 'ER_DUP_ENTRY') {
          console.log(`‚ö†Ô∏è  Danh m·ª•c ng√†nh ƒë√£ t·ªìn t·∫°i: ${category.name}`);
        } else {
          console.error(`‚ùå L·ªói th√™m danh m·ª•c ng√†nh ${category.name}:`, err.message);
        }
      }
    }
    
    // Th√™m categories cho doanh nghi·ªáp
    const doanhNghiepCategories = [
      { name: 'Ng√¢n h√†ng th∆∞∆°ng m·∫°i', description: 'Ph√¢n t√≠ch c√°c ng√¢n h√†ng th∆∞∆°ng m·∫°i', color: '#3b82f6' },
      { name: 'C√¥ng ty b·∫•t ƒë·ªông s·∫£n', description: 'Ph√¢n t√≠ch c√°c c√¥ng ty b·∫•t ƒë·ªông s·∫£n', color: '#10b981' },
      { name: 'C√¥ng ty c√¥ng ngh·ªá', description: 'Ph√¢n t√≠ch c√°c c√¥ng ty c√¥ng ngh·ªá', color: '#f59e0b' },
      { name: 'C√¥ng ty nƒÉng l∆∞·ª£ng', description: 'Ph√¢n t√≠ch c√°c c√¥ng ty nƒÉng l∆∞·ª£ng', color: '#ef4444' }
    ];
    
    for (const category of doanhNghiepCategories) {
      try {
        await executeQuery(`
          INSERT INTO post_categories (name, description, color, category_type) 
          VALUES (?, ?, ?, 'doanh_nghiep')
        `, [category.name, category.description, category.color]);
        console.log(`‚úÖ Th√™m danh m·ª•c doanh nghi·ªáp: ${category.name}`);
      } catch (err) {
        if (err.code === 'ER_DUP_ENTRY') {
          console.log(`‚ö†Ô∏è  Danh m·ª•c doanh nghi·ªáp ƒë√£ t·ªìn t·∫°i: ${category.name}`);
        } else {
          console.error(`‚ùå L·ªói th√™m danh m·ª•c doanh nghi·ªáp ${category.name}:`, err.message);
        }
      }
    }
    
    // Ki·ªÉm tra k·∫øt qu·∫£
    const nganhCount = await executeQuery('SELECT COUNT(*) as count FROM post_categories WHERE category_type = "nganh"');
    const doanhNghiepCount = await executeQuery('SELECT COUNT(*) as count FROM post_categories WHERE category_type = "doanh_nghiep"');
    
    console.log(`üìä T·ªïng k·∫øt:`);
    console.log(`   - Danh m·ª•c ng√†nh: ${nganhCount[0].count}`);
    console.log(`   - Danh m·ª•c doanh nghi·ªáp: ${doanhNghiepCount[0].count}`);
    
    console.log('üéâ Ho√†n th√†nh! Categories m·∫´u ƒë√£ ƒë∆∞·ª£c th√™m.');
    
  } catch (error) {
    console.error('‚ùå L·ªói khi th√™m categories m·∫´u:', error);
    process.exit(1);
  }
}

addSampleCategories();

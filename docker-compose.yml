version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: investment_capital_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-investment_capital}
      MYSQL_USER: ${MYSQL_USER:-investment_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-your_secure_password_here}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - investment_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: investment_capital_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-investment_capital}
      DB_USER: ${MYSQL_USER:-investment_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-your_secure_password_here}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 10485760
    ports:
      - "3001:3001"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - investment_network

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: investment_capital_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - investment_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: investment_capital_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - investment_network

volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  investment_network:
    driver: bridge

